// <auto-generated />
using System;
using GarageAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GarageAPI.Migrations
{
    [DbContext(typeof(GarageDbContext))]
    [Migration("20220613052308_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("GarageAPI.Models.ParkingLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableCarSpaces")
                        .HasColumnType("int");

                    b.Property<int>("AvailableMotorbikeSpaces")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkingLevels");
                });

            modelBuilder.Entity("GarageAPI.Models.ParkingLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LeaveTime")
                        .HasColumnType("bigint");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParkTime")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ParkingLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ParkingSlot")
                        .HasColumnType("int");

                    b.Property<Guid>("ParkingSpaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VehicalType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParkingLogs");
                });

            modelBuilder.Entity("GarageAPI.Models.ParkingSpace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParkingLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ParkingSlot")
                        .HasColumnType("int");

                    b.Property<int>("VehicalType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkingLevelId");

                    b.ToTable("ParkingSpaces");
                });

            modelBuilder.Entity("GarageAPI.Models.ParkingSpace", b =>
                {
                    b.HasOne("GarageAPI.Models.ParkingLevel", null)
                        .WithMany("ParkingSpaces")
                        .HasForeignKey("ParkingLevelId");
                });

            modelBuilder.Entity("GarageAPI.Models.ParkingLevel", b =>
                {
                    b.Navigation("ParkingSpaces");
                });
#pragma warning restore 612, 618
        }
    }
}
